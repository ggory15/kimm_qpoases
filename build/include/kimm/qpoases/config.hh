/* 
 * This file has been automatically generated by the jrl-cmakemodules.
 * Please see https://github.com/jrl-umi3218/jrl-cmakemodules/blob/master/config.hh.cmake for details.
*/

#ifndef KIMM_QPOASES_CONFIG_HH
# define KIMM_QPOASES_CONFIG_HH

// Package version (header).
# define KIMM_QPOASES_VERSION_UNKNOWN_TAG 0 // Used to mention that the current version is unknown.
# define KIMM_QPOASES_VERSION "1.0.0"
# define KIMM_QPOASES_MAJOR_VERSION 1
# define KIMM_QPOASES_MINOR_VERSION 0
# define KIMM_QPOASES_PATCH_VERSION 0

#define KIMM_QPOASES_VERSION_AT_LEAST(major, minor, patch) (KIMM_QPOASES_MAJOR_VERSION>major || (KIMM_QPOASES_MAJOR_VERSION>=major && \
                                                             (KIMM_QPOASES_MINOR_VERSION>minor || (KIMM_QPOASES_MINOR_VERSION>=minor && \
                                                                                                     KIMM_QPOASES_PATCH_VERSION>=patch))))

#define KIMM_QPOASES_VERSION_AT_MOST(major, minor, patch) (KIMM_QPOASES_MAJOR_VERSION<major || (KIMM_QPOASES_MAJOR_VERSION<=major && \
                                                            (KIMM_QPOASES_MINOR_VERSION<minor || (KIMM_QPOASES_MINOR_VERSION<=minor && \
                                                                                                     KIMM_QPOASES_PATCH_VERSION<=patch))))

// Handle portable symbol export.
// Defining manually which symbol should be exported is required
// under Windows whether MinGW or MSVC is used.
//
// The headers then have to be able to work in two different modes:
// - dllexport when one is building the library,
// - dllimport for clients using the library.
//
// On Linux, set the visibility accordingly. If C++ symbol visibility
// is handled by the compiler, see: http://gcc.gnu.org/wiki/Visibility
# if defined _WIN32 || defined __CYGWIN__
// On Microsoft Windows, use dllimport and dllexport to tag symbols.
#  define KIMM_QPOASES_DLLIMPORT __declspec(dllimport)
#  define KIMM_QPOASES_DLLEXPORT __declspec(dllexport)
#  define KIMM_QPOASES_DLLLOCAL
# else
// On Linux, for GCC >= 4, tag symbols using GCC extension.
#  if __GNUC__ >= 4
#   define KIMM_QPOASES_DLLIMPORT __attribute__ ((visibility("default")))
#   define KIMM_QPOASES_DLLEXPORT __attribute__ ((visibility("default")))
#   define KIMM_QPOASES_DLLLOCAL  __attribute__ ((visibility("hidden")))
#  else
// Otherwise (GCC < 4 or another compiler is used), export everything.
#   define KIMM_QPOASES_DLLIMPORT
#   define KIMM_QPOASES_DLLEXPORT
#   define KIMM_QPOASES_DLLLOCAL
#  endif // __GNUC__ >= 4
# endif // defined _WIN32 || defined __CYGWIN__

# ifdef KIMM_QPOASES_STATIC
// If one is using the library statically, get rid of
// extra information.
#  define KIMM_QPOASES_DLLAPI
#  define KIMM_QPOASES_LOCAL
# else
// Depending on whether one is building or using the
// library define DLLAPI to import or export.
#  ifdef kimm_qpoases_EXPORTS
#   define KIMM_QPOASES_DLLAPI KIMM_QPOASES_DLLEXPORT
#  else
#   define KIMM_QPOASES_DLLAPI KIMM_QPOASES_DLLIMPORT
#  endif // KIMM_QPOASES_EXPORTS
#  define KIMM_QPOASES_LOCAL KIMM_QPOASES_DLLLOCAL
# endif // KIMM_QPOASES_STATIC
#endif //! KIMM_QPOASES_CONFIG_HH
